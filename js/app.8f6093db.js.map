{"version":3,"file":"js/app.8f6093db.js","mappings":"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","sources":["webpack://kpi-dashboard/./src/App.vue","webpack://kpi-dashboard/./src/App.vue?7ccd","webpack://kpi-dashboard/./src/components/DashboardOverview.vue","webpack://kpi-dashboard/./src/stores/dataStores.js","webpack://kpi-dashboard/./src/components/LineCharts.vue","webpack://kpi-dashboard/./src/components/LineCharts.vue?ac5d","webpack://kpi-dashboard/./src/components/BarCharts.vue","webpack://kpi-dashboard/./src/components/BarCharts.vue?d778","webpack://kpi-dashboard/./src/components/DoughnutCharts.vue","webpack://kpi-dashboard/./src/components/DoughnutCharts.vue?24f4","webpack://kpi-dashboard/./src/components/DashboardOverview.vue?6a5d","webpack://kpi-dashboard/./src/router/index.js","webpack://kpi-dashboard/./src/main.js","webpack://kpi-dashboard/webpack/bootstrap","webpack://kpi-dashboard/webpack/runtime/chunk loaded","webpack://kpi-dashboard/webpack/runtime/compat get default export","webpack://kpi-dashboard/webpack/runtime/define property getters","webpack://kpi-dashboard/webpack/runtime/global","webpack://kpi-dashboard/webpack/runtime/hasOwnProperty shorthand","webpack://kpi-dashboard/webpack/runtime/publicPath","webpack://kpi-dashboard/webpack/runtime/jsonp chunk loading","webpack://kpi-dashboard/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view /> \n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n};\n</script>\n\n<style>\n/* Базовые стили для сброса */\nbody {\n  margin: 0;\n  background-color: #f0f2f5; /* Легкий фон */\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=41abab90\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=41abab90&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <div class=\"app-wrapper\">\r\n\r\n    <header>\r\n      <div class=\"logo-div\">\r\n        <img src=\"@/assets/img/Logo_Dash2.jpg\" alt=\"Logo\" class=\"logo-dash\">\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n      <button @click=\"toggleHelp\" class=\"button-question\">?</button>\r\n    </header>\r\n\r\n    <div v-if=\"showHelp\" class=\"help-overlay\">\r\n      <div class=\"help-popup\">\r\n        <h3>Как пользоваться дашбордом:</h3>\r\n        <p>\r\n          Добро пожаловать в дашборд продаж! Здесь вы можете отслеживать ключевые показатели эффективности.\r\n        </p>\r\n        <ul>\r\n          <li><strong>Последние транзакции:</strong> Просматривайте 10 последних продаж.</li>\r\n          <li><strong>KPI:</strong> Общая выручка, количество заказов, средний чек и прибыль.</li>\r\n          <li><strong>Топ-продукты:</strong> Узнайте, какие товары приносят наибольший доход.</li>\r\n          <li><strong>Динамика выручки:</strong> Отслеживайте изменения выручки по месяцам.</li>\r\n          <li><strong>Продажи по категориям:</strong> Анализируйте вклад различных категорий товаров.</li>\r\n          <li><strong>Распределение клиентов:</strong> Посмотрите сегментацию вашей клиентской базы.</li>\r\n        </ul>\r\n        <p>\r\n          Для начала работы загрузите файл CSV, нажав на кнопку \"Загрузите данные\".\r\n        </p>\r\n        <button @click=\"toggleHelp\" class=\"close-popup-button\">Закрыть</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"file-upload-section\"></div>\r\n\r\n    <div class=\"file-upload-section\">\r\n        <h3>Загрузите данные для дашборда:</h3>\r\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\".csv\"> <p v-if=\"loading\">Загрузка данных...</p>\r\n        <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n        <p v-if=\"!dataStore.rawData.length && !loading && !error\" class=\"table-description\">\r\n            Загрузите файл CSV (Excel XLSX не реализована) для отображения данных.\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"dashboard-title-bar\">\r\n      ОСНОВНАЯ АНАЛИТИКА\r\n    </div>\r\n\r\n    <div class=\"widgets-container\">\r\n      <div class=\"kpi-section\">\r\n        <div class=\"data-card\">\r\n          <h3>Общая выручка</h3>\r\n          <p>{{ dataStore.processedData.totalRevenue }}</p>\r\n        </div>\r\n\r\n        <div class=\"data-card\">\r\n          <h3>Количество заказов</h3>\r\n          <p>{{ dataStore.processedData.totalOrders }}</p>\r\n        </div>\r\n\r\n        <div class=\"data-card\">\r\n          <h3>Средний чек</h3>\r\n          <p>{{ dataStore.processedData.averageCheck }}</p>\r\n        </div>\r\n\r\n        <div class=\"data-card\">\r\n          <h3>Общая прибыль</h3>\r\n          <p>{{ dataStore.processedData.totalProfit }}</p>\r\n        </div>\r\n\r\n        <div class=\"data-card\">\r\n          <h3>Количество проданных единиц</h3>\r\n          <p>{{ dataStore.processedData.unitsSold }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"graphs-section\">\r\n          <div class=\"data-card\">\r\n            <h3>Динамика выручки</h3>\r\n            <p class=\"graph-description\" v-if=\"revenueChartData.labels.length === 0\">Загрузите данные для отображения графика.</p>\r\n            <LineChart v-else :chart-data=\"revenueChartData\" :chart-options=\"revenueChartOptions\" />\r\n            </div>\r\n\r\n          <div class=\"data-card\">\r\n            <h3>Продажи по категориям</h3>\r\n            <p class=\"graph-description\" v-if=\"!categoryChartData.labels || categoryChartData.labels.length === 0\">Загрузите данные для отображения графика.</p>\r\n            <BarChart v-else :chart-data=\"categoryChartData\" :chart-options=\"categoryChartOptions\" />\r\n            </div>\r\n\r\n          <div class=\"data-card\">\r\n            <h3>Средний чек по времени</h3>\r\n            <p class=\"graph-description\" v-if=\"!avgCheckChartData.labels || avgCheckChartData.labels.length === 0\">Загрузите данные для отображения графика.</p>\r\n            <LineChart v-else :chart-data=\"avgCheckChartData\" :chart-options=\"avgCheckChartOptions\" />\r\n            </div>\r\n\r\n          <div class=\"data-card\">\r\n            <h3>Распределение клиентов</h3>\r\n            <p class=\"graph-description\" v-if=\"!customerDistributionChartData.labels || customerDistributionChartData.labels.length === 0\">Загрузите данные для отображения графика.</p>\r\n            <DoughnutChart v-else :chart-data=\"customerDistributionChartData\" :chart-options=\"customerDistributionChartOptions\" />\r\n            </div>\r\n      </div>\r\n\r\n      <div class=\"tables-section\">\r\n        <div class=\"data-card full-width\">\r\n          <h3>Последние транзакции</h3>\r\n          <p class=\"table-description\" v-if=\"!dataStore.rawData.length\">Загрузите данные, чтобы увидеть последние транзакции.</p>\r\n          <div v-else class=\"transaction-table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Дата</th>\r\n                  <th>Продукт</th>\r\n                  <th>Категория</th>\r\n                  <th>Выручка</th>\r\n                  <th>Сегмент клиента</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(row, index) in dataStore.getRawTransactions\" :key=\"index\">\r\n                  <td>{{ row.Date }}</td>\r\n                  <td>{{ row.Product }}</td>\r\n                  <td>{{ row.Category }}</td>\r\n                  <td>{{ parseFloat(row.Revenue).toFixed(2) }}</td>\r\n                  <td>{{ row.CustomerSegment }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"data-card full-width\">\r\n            <h3>Топ 5 продуктов по выручке</h3>\r\n            <p class=\"table-description\" v-if=\"!dataStore.processedData.topProducts?.length\">Загрузите данные, чтобы увидеть топ продуктов.</p>\r\n            <div v-else class=\"top-products-table-wrapper\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Продукт</th>\r\n                            <th>Выручка</th>\r\n                            <th>Продано единиц</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(product, index) in dataStore.getTop5Products\" :key=\"index\">\r\n                            <td>{{ product.name }}</td>\r\n                            <td>{{ parseFloat(product.revenue).toFixed(2) }}</td>\r\n                            <td>{{ product.units }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useDataStore } from '@/stores/dataStores.js'; // < ИМПОРТИРУЙ PINIA STORE\r\nimport { ref, computed } from 'vue'; // ref нужен для реактивных переменных (loading, error)\r\nimport Papa from 'papaparse'; // Нужен для парсинга CSV\r\n\r\nimport LineChart from './LineCharts.vue';\r\nimport BarChart from './BarCharts.vue';\r\nimport DoughnutChart from './DoughnutCharts.vue';\r\n\r\nexport default {\r\n  name: 'DashboardOverview',\r\n  components:{\r\n    LineChart, \r\n    BarChart,\r\n    DoughnutChart\r\n  },\r\n  // Используем Composition API (setup) для интеграции с Pinia Store и управления состоянием\r\n  setup() {\r\n    const dataStore = useDataStore(); //ИНИЦИАЛИЗИРУЕМ PINIA STORE\r\n    const loading = ref(false); // Состояние загрузки файла\r\n    const error = ref(null);    // Сообщение об ошибке при загрузке\r\n    const showHelp = ref(false);\r\n\r\n    const toggleHelp = () => { \r\n      showHelp.value = !showHelp.value;\r\n    };\r\n\r\n    // Метод для обработки загрузки файла\r\n    const handleFileUpload = async (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) {\r\n        dataStore.resetData(); // Если файл не выбран или отменен, сбросить данные\r\n        return;\r\n      }\r\n\r\n      loading.value = true; // Устанавливаем состояние загрузки\r\n      error.value = null;   // Сбрасываем предыдущие ошибки\r\n\r\n      // Проверка типа файла\r\n      if (!file.name.endsWith('.csv')) {\r\n        error.value = 'Пожалуйста, загрузите файл формата CSV.';\r\n        loading.value = false;\r\n        dataStore.resetData(); // Сбросить данные, если файл некорректный\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const text = await file.text(); // Читаем содержимое файла как текст\r\n        Papa.parse(text, {\r\n          header: true,         // Первая строка файла - заголовки колонок\r\n          skipEmptyLines: true, // Пропускать пустые строки\r\n          dynamicTyping: true,  // Попытаться автоматически определить типы данных (числа, булевы)\r\n          complete: (results) => {\r\n            if (results.errors.length) {\r\n              console.error(\"PapaParse errors:\", results.errors);\r\n              error.value = \"Ошибка при парсинге CSV: \" + results.errors[0].message;\r\n              dataStore.resetData();\r\n            } else {\r\n              // Передаем распарсенные данные в Pinia Store\r\n              dataStore.setRawData(results.data);\r\n            }\r\n            loading.value = false; // Загрузка завершена\r\n          },\r\n          error: (err) => { // Обработка ошибок парсинга\r\n            error.value = 'Ошибка при чтении файла: ' + err.message;\r\n            loading.value = false;\r\n            dataStore.resetData();\r\n          }\r\n        });\r\n      } catch (e) {\r\n        error.value = 'Непредвиденная ошибка при обработке файла: ' + e.message;\r\n        console.error(e);\r\n        loading.value = false;\r\n        dataStore.resetData();\r\n      }\r\n    };\r\n\r\n\r\n    const revenueChartData = computed(() => {\r\n      const data = dataStore.processedData.revenueByMonth;\r\n      if (!data || data.length === 0) {\r\n        return { labels: [], datasets: [] };\r\n      }\r\n\r\n      return {\r\n        labels: data.map(item => item.month),\r\n        datasets: [\r\n          {\r\n            label: 'Выручка',\r\n            backgroundColor: 'rgba(248, 121, 121, 0.5)',\r\n            borderColor: '#f87979',\r\n            data: data.map(item => item.value),\r\n            fill: true\r\n          }\r\n        ]\r\n      };\r\n    });\r\n\r\n    const revenueChartOptions = computed(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            title: {\r\n                display: true\r\n            }\r\n        }\r\n    }));\r\n\r\n    const categoryChartData = computed(() => {\r\n        const data = dataStore.processedData.salesByCategory; // Предполагаем: [{ category: 'A', value: 100 }, ...]\r\n        if (!data || data.length === 0) {\r\n            return { labels: [], datasets: [] };\r\n        }\r\n        const labels = data.map(item => item.category);\r\n        const values = data.map(item => item.value);\r\n\r\n        // Цвета для столбцов (можно использовать разные для каждой категории или один)\r\n        const backgroundColors = [\r\n            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\r\n            '#FF9900', '#0099FF', '#CC00CC', '#66CC66', '#FFD700'\r\n        ];\r\n\r\n        return {\r\n            labels: labels,\r\n            datasets: [{\r\n                label: 'Продажи',\r\n                backgroundColor: backgroundColors.slice(0, labels.length), // Применяем цвета по количеству категорий\r\n                data: values\r\n            }]\r\n        };\r\n    });\r\n\r\n    const categoryChartOptions = computed(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n            },\r\n            legend: {\r\n                display: false // Для BarChart обычно легенда не нужна, если одна группа данных\r\n            }\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    }));\r\n\r\n    const avgCheckChartData = computed(() => {\r\n        const data = dataStore.processedData.averageCheckByTime; // Предполагаем: [{ time: 'Jan', value: 150 }, ...]\r\n        if (!data || data.length === 0) {\r\n            return { labels: [], datasets: [] };\r\n        }\r\n        return {\r\n            labels: data.map(item => item.time),\r\n            datasets: [{\r\n                label: 'Средний чек',\r\n                backgroundColor: 'rgba(153, 204, 102, 0.5)', // Более зеленый цвет\r\n                borderColor: '#99CC66',\r\n                data: data.map(item => item.value),\r\n                fill: true, \r\n            }]\r\n        };\r\n    });\r\n\r\n    const avgCheckChartOptions = computed(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n            }\r\n        }\r\n    }));\r\n\r\n\r\n    const customerDistributionChartData = computed(() => {\r\n        const data = dataStore.processedData.customerSegmentCounts; // Предполагаем: [{ segment: 'New', count: 100 }, ...]\r\n        if (!data || data.length === 0) {\r\n            return { labels: [], datasets: [] };\r\n        }\r\n        const labels = data.map(item => item.segment);\r\n        const values = data.map(item => item.count);\r\n\r\n        const backgroundColors = [\r\n            '#FFCD56', '#4BC0C0', '#FF6384', '#36A2EB', '#9966FF',\r\n            '#FF9900', '#0099FF', '#CC00CC'\r\n        ];\r\n\r\n        return {\r\n            labels: labels,\r\n            datasets: [{\r\n                backgroundColor: backgroundColors.slice(0, labels.length),\r\n                data: values\r\n            }]\r\n        };\r\n    });\r\n\r\n    const customerDistributionChartOptions = computed(() => ({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n            }\r\n        }\r\n    }));\r\n\r\n    // Чтобы дашборд был пустым при первом запуске (до загрузки файла),\r\n    // или если ты хочешь сбросить его вручную при монтировании:\r\n    dataStore.resetData(); // Можешь раскомментировать, если хочешь чтобы он был пуст при старте\r\n\r\n    // Возвращаем все, что должно быть доступно в шаблоне\r\n    return {\r\n      dataStore,        // Весь Pinia Store\r\n      handleFileUpload, // Метод для загрузки файла\r\n      loading,          // Состояние загрузки\r\n      error,             // Сообщение об ошибке\r\n      showHelp,\r\n      toggleHelp,\r\n      revenueChartData,\r\n      revenueChartOptions,\r\n      categoryChartData,\r\n      categoryChartOptions,\r\n      avgCheckChartData,\r\n      avgCheckChartOptions,\r\n      customerDistributionChartData,\r\n      customerDistributionChartOptions\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\nhtml, body {\r\n  height: 100%;\r\n  margin: 0;\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f0f2f5;\r\n  overflow-x: hidden; /* Предотвращаем горизонтальный скролл */\r\n}\r\n\r\n.app-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh; /* Заполняем всю высоту viewport */\r\n}\r\n\r\n/* Header */\r\nheader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  background-color: #2b3e4f;\r\n  color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.help-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.6); /* Затемненный фон */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 2000; /* Высокий z-index, чтобы быть поверх всего */\r\n}\r\n\r\n.help-popup {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.4);\r\n  padding: 30px;\r\n  width: 90%;\r\n  max-width: 650px;\r\n  max-height: 90vh; /* Ограничить высоту для небольших экранов */\r\n  overflow-y: auto; /* Добавить скролл, если контента много */\r\n  color: #333;\r\n  position: relative; /* Для позиционирования кнопки закрытия */\r\n}\r\n\r\n.help-popup h3 {\r\n  margin-top: 0;\r\n  color: #2b3e4f;\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.help-popup p, .help-popup ul {\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.help-popup ul {\r\n  padding-left: 25px;\r\n}\r\n\r\n.help-popup li {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.help-popup strong {\r\n  font-weight: bold;\r\n}\r\n\r\n.close-popup-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n  display: block; /* Сделать кнопкой блок, чтобы можно было выровнять */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.close-popup-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* Переопределяем стили для кнопки со знаком вопроса, чтобы она была более явной */\r\n.button-question {\r\n  background-color: #007bff; /* Синий цвет, чтобы выделялась */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 40px; /* Увеличили размер */\r\n  height: 40px;\r\n  font-size: 24px; /* Увеличили шрифт */\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.button-question:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.logo-div {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.logo-dash {\r\n  height: 40px;\r\n  border-radius: 10px;\r\n}\r\n\r\nheader h1 {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  color: #fff;\r\n}\r\n\r\n.button-question {\r\n  background-color: #5d758c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n}\r\n\r\n/* File Upload Section - Стили для секции загрузки файла */\r\n.file-upload-section {\r\n    padding: 15px 20px;\r\n    background-color: #e0e5e8;\r\n    border-bottom: 1px solid #ccc;\r\n    text-align: center;\r\n    color: #333;\r\n    flex-shrink: 0;\r\n}\r\n.file-upload-section input[type=\"file\"] {\r\n    margin-top: 10px;\r\n    padding: 8px 12px;\r\n    border: 1px solid #a0a0a0;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n}\r\n.file-upload-section input[type=\"file\"]:hover {\r\n    background-color: #f0f0f0;\r\n}\r\n.file-upload-section .error-message {\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-top: 10px;\r\n}\r\n.file-upload-section h3 {\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n}\r\n.file-upload-section p {\r\n    margin-top: 5px;\r\n    margin-bottom: 0;\r\n    font-size: 14px;\r\n    color: #555;\r\n}\r\n\r\n\r\n/* Dashboard Title Bar - Стили для полоски с названием дашборда */\r\n.dashboard-title-bar {\r\n  background-color: #3f5466;\r\n  padding: 15px 20px;\r\n  color: #c0c8d1;\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  flex-shrink: 0;\r\n}\r\n\r\n/* Widgets Container (Main Grid Layout) */\r\n.widgets-container {\r\n  padding: 20px;\r\n  display: grid;\r\n  gap: 20px;\r\n  flex-grow: 1; /* Этот блок будет занимать всё доступное пространство */\r\n}\r\n\r\n/* KPI Section */\r\n.kpi-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* 5 KPI, адаптивные */\r\n  gap: 20px;\r\n}\r\n\r\n/* Graphs Section */\r\n.graphs-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); /* 4 графика, адаптивные */\r\n  gap: 20px;\r\n}\r\n\r\n/* Tables Section */\r\n.tables-section {\r\n  display: grid;\r\n  grid-template-columns: 1fr; /* Таблицы занимают всю ширину */\r\n  gap: 20px;\r\n}\r\n\r\n/* Data Card (General Style for all widgets) */\r\n.data-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.data-card.full-width {\r\n    grid-column: 1 / -1;\r\n    text-align: left;\r\n    align-items: stretch;\r\n}\r\n\r\n\r\n.data-card h3 {\r\n  margin-top: 0;\r\n  color: #555;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* KPI numbers/text */\r\n.data-card p {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 0;\r\n  line-height: 1.2;\r\n}\r\n\r\n/* Descriptions for graphs and tables */\r\n.data-card .graph-description,\r\n.data-card .table-description {\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    color: #777;\r\n    margin-top: 5px;\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n    width: 100%;\r\n}\r\n\r\n/* Responsive Image Placeholders for Graphs */\r\n.responsive-image {\r\n  max-width: 100%;\r\n  height: auto;\r\n  display: block;\r\n  margin: 0 auto;\r\n  min-height: 150px;\r\n  object-fit: contain;\r\n  border: 1px dashed #ccc;\r\n}\r\n\r\n/* Table Specific Styles */\r\n.transaction-table-wrapper, .top-products-table-wrapper {\r\n    max-height: 400px;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n}\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 0;\r\n    font-size: 14px;\r\n    table-layout: fixed;\r\n}\r\ntable th, table td {\r\n    border: 1px solid #eee;\r\n    padding: 10px;\r\n    text-align: left;\r\n    word-break: break-word;\r\n}\r\ntable th {\r\n    background-color: #f8f8f8;\r\n    font-weight: bold;\r\n    color: #444;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1;\r\n}\r\ntable tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n}\r\ntable tr:hover {\r\n    background-color: #f1f1f1;\r\n}\r\n\r\n</style>","import { defineStore } from 'pinia';\r\n\r\nexport const useDataStore = defineStore('data', {\r\n  state: () => ({\r\n    rawData: [],\r\n    processedData: {\r\n      totalRevenue: '0',\r\n      totalOrders: '0',\r\n      averageCheck: '0',\r\n      totalProfit: '0', \r\n      unitsSold: '0',   \r\n      topProducts: [],\r\n      revenueByMonth: [], \r\n      salesByCategory: [], \r\n      averageCheckByTime: [], \r\n      customerSegmentCounts: [] \r\n    },\r\n  }),\r\n\r\n  getters: {\r\n    getKpiData: (state) => state.processedData,\r\n    getRawTransactions: (state) => state.rawData.slice(-10),\r\n    getTop5Products: (state) => state.processedData.topProducts.slice(0, 5),\r\n  },\r\n\r\n  actions: {\r\n    setRawData(data) {\r\n      this.rawData = data;\r\n      this.processData();\r\n    },\r\n\r\n    processData() {\r\n      if (this.rawData.length === 0) {\r\n        this.processedData = {\r\n          totalRevenue: '0',\r\n          totalOrders: '0',\r\n          averageCheck: '0',\r\n          totalProfit: '0',\r\n          unitsSold: '0',\r\n          topProducts: [],\r\n          revenueByMonth: [],\r\n          salesByCategory: [],\r\n          averageCheckByTime: [],\r\n          customerSegmentCounts: []\r\n        };\r\n        return;\r\n      }\r\n\r\n      // --- Расчет KPI ---\r\n      let totalRevenue = 0;\r\n      let totalOrders = 0;\r\n      let unitsSold = 0;\r\n      let totalProfit = 0;\r\n\r\n      const productSales = new Map();\r\n      const monthlyData = new Map(); \r\n      const salesByCategoryMap = new Map();\r\n      const customerSegmentCountsMap = new Map();\r\n\r\n      this.rawData.forEach(row => {\r\n        const revenue = parseFloat(row.Revenue);\r\n        const currentUnitsSold  = parseInt(row.UnitsSold  || '1'); \r\n        const cost = parseFloat(row.Cost); \r\n\r\n        const profit = (!isNaN(revenue) && !isNaN(cost)) ? (revenue - cost) : 0;\r\n\r\n        if (!isNaN(revenue)) {\r\n          totalRevenue += revenue;\r\n          totalOrders++; \r\n        }\r\n        if (!isNaN(currentUnitsSold)) { \r\n          unitsSold += currentUnitsSold;\r\n        }\r\n        if (!isNaN(profit)) { \r\n          totalProfit += profit;\r\n        }\r\n\r\n        // Агрегация для топ-продуктов\r\n        const productName = row.Product;\r\n        if (productName) {\r\n          const currentData = productSales.get(productName) || { revenue: 0, units: 0 };\r\n          currentData.revenue += isNaN(revenue) ? 0 : revenue;\r\n          currentData.units += isNaN(currentUnitsSold) ? 0 : currentUnitsSold; \r\n          productSales.set(productName, currentData);\r\n        }\r\n\r\n        //ЛОГИКА ДЛЯ ДИНАМИКИ ВЫРУЧКИ ПО МЕСЯЦАМ И СРЕДНЕГО ЧЕКА (ПЕРВЫЙ ГРАФИК И ТРЕТИЙ ГРАФИК) \r\n        const date = new Date(row.Date);\r\n        if (!isNaN(date.getTime()) && !isNaN(revenue)) {\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth();\r\n            const monthKey = new Date(year, month, 1).toLocaleString('ru-RU', { month: 'short', year: '2-digit' });\r\n            //console.log(`Создан monthKey: ${monthKey} для даты ${row.Date}`);\r\n\r\n            const currentMonthData = monthlyData.get(monthKey) || {totalRevenue: 0, totalOrders: 0}\r\n            currentMonthData.totalRevenue += revenue;\r\n            currentMonthData.totalOrders += 1;\r\n            monthlyData.set(monthKey, currentMonthData);\r\n        }\r\n\r\n        //ЛОГИКА ДЛЯ ПРОДАЖ ПО КАТЕГОРИЯМ\r\n        const category = row.Category;\r\n        if(category && !isNaN(revenue)){\r\n          salesByCategoryMap.set(category, (salesByCategoryMap.get(category) || 0 ) + revenue);\r\n        }\r\n\r\n        //ЛОГИКА ДЛЯ РАСПРЕДЕЛЕНИЕ КЛИЕНТОВ\r\n        const customerSegment = row.CustomerSegment;\r\n        if(customerSegment){\r\n          customerSegmentCountsMap.set(customerSegment, (customerSegmentCountsMap.get(customerSegment) || 0) + 1);\r\n        }\r\n      });\r\n\r\n\r\n\r\n      // Расчет среднего чека (KPI)\r\n      const averageCheck = totalOrders > 0 ? (totalRevenue / totalOrders).toFixed(2) : '0';\r\n\r\n      // Форматирование KPI\r\n      this.processedData.totalRevenue = totalRevenue.toFixed(2);\r\n      this.processedData.totalOrders = totalOrders.toString();\r\n      this.processedData.averageCheck = averageCheck;\r\n      this.processedData.unitsSold = unitsSold.toString();\r\n      this.processedData.totalProfit = totalProfit.toFixed(2);\r\n\r\n      // --- Расчет Топ 5 продуктов ---\r\n      const sortedProducts = Array.from(productSales.entries())\r\n        .map(([name, data]) => ({ name, revenue: data.revenue, units: data.units }))\r\n        .sort((a, b) => b.revenue - a.revenue);\r\n\r\n      this.processedData.topProducts = sortedProducts;\r\n      \r\n      // ФОРМИРОВАНИЕ ДАННЫХ ДЛЯ ГРАФИКА ДИНАМИКА ВЫРУЧКИ\r\n      const sortedMonths = Array.from(monthlyData.keys()).sort((a, b) => {\r\n        const parseMonthYear = (s) => {\r\n            const [monthStr, yearStr] = s.split(' ');\r\n            const year = parseInt(`20${yearStr}`); \r\n\r\n            // Используем map для более надежного сопоставления названий месяцев\r\n            const monthMap = {\r\n                'янв': 0, 'фев': 1, 'мар': 2, 'апр': 3, 'май': 4, 'июнь': 5, 'июль': 6, 'авг': 7, 'сен': 8, 'окт': 9, 'ноя': 10, 'дек': 11,\r\n                'мая': 4, \r\n                'янв.': 0, 'февр.': 1, 'март': 2, 'апр.': 3, 'июня': 5, 'июля': 6, 'авг.': 7, 'сент.': 8, 'окт.': 9, 'нояб.': 10, 'дек.': 11\r\n            };\r\n\r\n            let monthIndex = monthMap[monthStr.toLowerCase()];\r\n\r\n            if (monthIndex === undefined) {\r\n                console.warn(`Не удалось распознать месяц: \"${monthStr}\" из строки \"${s}\".`);\r\n                return new Date(NaN);\r\n            }\r\n            return new Date(year, monthIndex);\r\n        };\r\n        return parseMonthYear(a) - parseMonthYear(b);\r\n      });\r\n\r\n      this.processedData.revenueByMonth = sortedMonths.map(monthName => ({\r\n        month: monthName,\r\n        value: parseFloat(monthlyData.get(monthName).totalRevenue.toFixed(2)) \r\n      }));\r\n\r\n      // ФОРМИРОВАНИЕ ДАННЫХ ДЛЯ ГРАФИКА СРЕДНИЙ ЧЕК\r\n      this.processedData.averageCheckByTime = sortedMonths.map(monthName => {\r\n        const data = monthlyData.get(monthName);\r\n        const avgCheck = data.totalOrders > 0 ? (data.totalRevenue / data.totalOrders) : 0;\r\n        return {\r\n          time: monthName, \r\n          value: parseFloat(avgCheck.toFixed(2))\r\n        };\r\n      });\r\n\r\n      // ФОРМИРОВАНИЕ ДАННЫХ ДЛЯ ПРОДАЖ ПО КАТЕГОРИЯМ\r\n      this.processedData.salesByCategory = Array.from(salesByCategoryMap.entries()).map(([categoryName, totalCategoryRevenue]) => ({\r\n            category: categoryName,\r\n            value: parseFloat(totalCategoryRevenue.toFixed(2))\r\n        }))\r\n\r\n\r\n      //ФОРМИРОВАНИЕ ДАННЫХ ДЛЯ ГРАФИКА \"РАСПРЕДЕЛЕНИЕ КЛИЕНТОВ\r\n      \r\n      this.processedData.customerSegmentCounts = Array.from(customerSegmentCountsMap.entries()).map(([segmentName, count]) => ({\r\n            segment: segmentName,\r\n            count: count\r\n        }))\r\n      \r\n    },\r\n\r\n    resetData() {\r\n      this.rawData = [];\r\n      this.processData();\r\n    }\r\n  },\r\n});","<script setup>\r\nimport { Line } from 'vue-chartjs';\r\nimport{\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    LineElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement\r\n} from 'chart.js';\r\n\r\n\r\nChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    LineElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement\r\n);\r\n\r\nconst { chartData, chartOptions } = defineProps({\r\n    chartData: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    chartOptions: { // Это будут настройки графика\r\n        type: Object,\r\n        default: () => ({ responsive: true, maintainAspectRatio: false })\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n\r\n<div class=\"chart-container\">\r\n    <Line :data=\"chartData\" :options=\"chartOptions\" />\r\n\r\n</div>    \r\n</template>\r\n\r\n\r\n<style scoped>\r\n.chart-container {\r\n  /* Задай фиксированную высоту */\r\n  height: 400px; /* Или любую другую высоту, которая тебе нужна */\r\n  width: 100%; /* Или фиксированную ширину */\r\n\r\n  /* Или максимальную высоту, чтобы он не выходил за ее пределы */\r\n  /* max-height: 500px; */\r\n}\r\n</style>","import script from \"./LineCharts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LineCharts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LineCharts.vue?vue&type=style&index=0&id=b340b380&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b340b380\"]])\n\nexport default __exports__","<script setup>\r\nimport { Bar } from 'vue-chartjs';\r\nimport {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement, \r\n    CategoryScale,\r\n    LinearScale\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    BarElement, \r\n    CategoryScale,\r\n    LinearScale\r\n);\r\n\r\n\r\nconst { chartData, chartOptions } = defineProps({\r\n    chartData: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    chartOptions: {\r\n        type: Object,\r\n        default: () => ({ responsive: true, maintainAspectRatio: false })\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"chart-container\">\r\n        <Bar :data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  height: 400px; \r\n  width: 100%; \r\n\r\n}\r\n</style>","import script from \"./BarCharts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BarCharts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BarCharts.vue?vue&type=style&index=0&id=77711da7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77711da7\"]])\n\nexport default __exports__","<script setup>\r\nimport { Doughnut } from 'vue-chartjs'; \r\nimport {\r\n    Chart as ChartJS,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement \r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement \r\n);\r\n\r\n\r\nconst { chartData, chartOptions } = defineProps({\r\n    chartData: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    chartOptions: {\r\n        type: Object,\r\n        default: () => ({ responsive: true, maintainAspectRatio: false })\r\n    }\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div class=\"chart-container\">\r\n        <Doughnut :data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  height: 400px; \r\n  width: 100%; \r\n}\r\n\r\n</style>","import script from \"./DoughnutCharts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DoughnutCharts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DoughnutCharts.vue?vue&type=style&index=0&id=f4c9fac4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f4c9fac4\"]])\n\nexport default __exports__","import { render } from \"./DashboardOverview.vue?vue&type=template&id=12f0a3e6\"\nimport script from \"./DashboardOverview.vue?vue&type=script&lang=js\"\nexport * from \"./DashboardOverview.vue?vue&type=script&lang=js\"\n\nimport \"./DashboardOverview.vue?vue&type=style&index=0&id=12f0a3e6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\r\nimport DashboardOverview from '../components/DashboardOverview.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'DashboardOverview',\r\n    component: DashboardOverview,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.NODE_ENV === 'production' ? '/KPDash_for_Small_Business/' : '/'), // <-- ИЗМЕНИТЕ ЭТУ СТРОКУ!\r\n  routes,\r\n});\r\n\r\nexport default router;","// src/main.js\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router'; \nimport { createPinia } from 'pinia'; \n\nconst app = createApp(App);\nconst pinia = createPinia(); \n\napp.use(router);\napp.use(pinia); \napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/KPDash_for_Small_Business/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkkpi_dashboard\"] = self[\"webpackChunkkpi_dashboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3156); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","name","__exports__","render","class","_createElementVNode","src","_imports_0","alt","onClick","_cache","args","$setup","toggleHelp","showHelp","_hoisted_2","_hoisted_3","_hoisted_4","type","onChange","handleFileUpload","accept","loading","_hoisted_5","error","_hoisted_6","_toDisplayString","dataStore","rawData","length","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","processedData","totalRevenue","_hoisted_11","totalOrders","_hoisted_12","averageCheck","_hoisted_13","totalProfit","_hoisted_14","unitsSold","_hoisted_15","_hoisted_16","revenueChartData","labels","_hoisted_17","_createBlock","_component_LineChart","revenueChartOptions","_hoisted_18","categoryChartData","_component_BarChart","categoryChartOptions","_hoisted_19","_hoisted_20","avgCheckChartData","avgCheckChartOptions","_hoisted_21","_hoisted_22","customerDistributionChartData","_component_DoughnutChart","customerDistributionChartOptions","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_27","_Fragment","_renderList","getRawTransactions","row","index","key","Date","Product","Category","parseFloat","Revenue","toFixed","CustomerSegment","_hoisted_26","_hoisted_28","topProducts","_hoisted_30","getTop5Products","product","revenue","units","_hoisted_29","useDataStore","defineStore","state","revenueByMonth","salesByCategory","averageCheckByTime","customerSegmentCounts","getters","getKpiData","slice","actions","setRawData","data","this","processData","productSales","Map","monthlyData","salesByCategoryMap","customerSegmentCountsMap","forEach","currentUnitsSold","parseInt","UnitsSold","cost","Cost","profit","isNaN","productName","currentData","get","set","date","getTime","year","getFullYear","month","getMonth","monthKey","toLocaleString","currentMonthData","category","customerSegment","toString","sortedProducts","Array","from","entries","map","sort","a","b","sortedMonths","keys","parseMonthYear","s","monthStr","yearStr","split","monthMap","monthIndex","toLowerCase","undefined","console","warn","NaN","monthName","value","avgCheck","time","categoryName","totalCategoryRevenue","segmentName","count","segment","resetData","ChartJS","register","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","PointElement","_unref","Line","__props","chartData","options","chartOptions","BarElement","Bar","ArcElement","Doughnut","components","LineChart","BarChart","DoughnutChart","setup","ref","async","file","event","target","files","endsWith","text","Papa","header","skipEmptyLines","dynamicTyping","complete","results","errors","message","err","e","computed","item","datasets","label","backgroundColor","borderColor","fill","responsive","maintainAspectRatio","plugins","title","display","values","backgroundColors","legend","scales","y","beginAtZero","routes","path","component","DashboardOverview","router","createRouter","history","createWebHistory","app","createApp","App","pinia","createPinia","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}